// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id          Int        @id @default(autoincrement())
  name        String
  points      Int
  link        String?
  isCompleted Boolean    @default(false)
  UserTasks   UserTask[]
}

model User {
  id            Int           @id @default(autoincrement())
  username      String        @unique
  name          String?
  wallet        String?       @unique
  referredBy    String
  chain         String?
  level         Int           @default(1)
  difficulty    Int           @default(1)
  puzzleCount   Int           @default(1)
  referralCount Int           @default(0)
  chatId        String?
  spinCount     Int           @default(0)
  claimCount    Int           @default(0)
  totalPoints   Int           @default(0)
  isOfficial    Boolean       @default(false)
  isMining      Boolean       @default(false)
  isPremium     Boolean       @default(false)
  lastClaim     DateTime      @default(now())
  UserTasks     UserTask[]
  weeklyPoints  Int           @default(0)
  WeeklyScores  WeeklyScore[]
}

model WeeklyScore {
  id         Int      @id @default(autoincrement())
  userId     Int
  weekNumber Int // ISO week number
  year       Int // Year for clarity
  points     Int      @default(0) // Points scored by the user in the week
  rank       Int? // Rank of the user for the week
  createdAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, weekNumber, year]) // Ensure no duplicate records for the same week
}

model UserTask {
  id          Int     @id @default(autoincrement())
  userId      Int
  taskId      Int
  isCompleted Boolean @default(false)
  user        User    @relation(fields: [userId], references: [id])
  task        Task    @relation(fields: [taskId], references: [id])

  @@unique([userId, taskId])
}
